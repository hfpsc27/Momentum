// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Momentum.UI.Models;

namespace Momentum.UI.Data;

public partial class AppDbContext2 : DbContext
{
    public AppDbContext2(DbContextOptions<AppDbContext2> options)
        : base(options)
    {
    }

    public virtual DbSet<Datas> Datas { get; set; }

    public virtual DbSet<Docentes> Docentes { get; set; } = default!;

    public virtual DbSet<Momentos> Momentos { get; set; }

    public virtual DbSet<Regimes> Regimes { get; set; }

    public virtual DbSet<Semestres> Semestres { get; set; }

    public virtual DbSet<UCDocenteMomento> UCDocenteMomento { get; set; }

    public virtual DbSet<UCs> UCs { get; set; }

    public virtual DbSet<UCsDocente> UCsDocente { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        //modelBuilder.Entity<Semestres>(entity =>
        //{
        //    entity.HasOne(d => d.DtFimNavigation).WithMany(p => p.SemestresDtFimNavigation).OnDelete(DeleteBehavior.NoAction);

        //    entity.HasOne(d => d.DtIniNavigation).WithMany(p => p.SemestresDtIniNavigation).OnDelete(DeleteBehavior.NoAction);
        //});

        //modelBuilder.Entity<UCDocenteMomento>(entity =>
        //{
        //    entity.Property(e => e.DataInsert).HasDefaultValueSql("DATETIME('now')");

        //    entity.HasOne(d => d.DataInsertNavigation).WithMany(p => p.UCDocenteMomentoDataInsertNavigation).OnDelete(DeleteBehavior.NoAction);

        //    entity.HasOne(d => d.DataMomento).WithMany(p => p.UCDocenteMomentoDataMomento).OnDelete(DeleteBehavior.NoAction);

        //    entity.HasOne(d => d.Momento).WithMany(p => p.UCDocenteMomento).OnDelete(DeleteBehavior.NoAction);

        //    entity.HasOne(d => d.Regime).WithMany(p => p.UCDocenteMomento).OnDelete(DeleteBehavior.NoAction);

        //    entity.HasOne(d => d.UCsDocente).WithMany(p => p.UCDocenteMomento).OnDelete(DeleteBehavior.NoAction);
        //});

        //modelBuilder.Entity<UCsDocente>(entity =>
        //{
        //    entity.HasOne(d => d.Docente).WithMany(p => p.UCsDocente).OnDelete(DeleteBehavior.NoAction);

        //    entity.HasOne(d => d.Semestre).WithMany(p => p.UCsDocente).OnDelete(DeleteBehavior.NoAction);

        //    entity.HasOne(d => d.UC).WithMany(p => p.UCsDocente).OnDelete(DeleteBehavior.NoAction);
        //});

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}